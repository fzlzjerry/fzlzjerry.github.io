---
import Layout from '../../../layouts/Layout.astro';
import { assignments } from '../../../data/assignments';

export function getStaticPaths() {
  return assignments.map(assignment => ({
    params: { id: assignment.id },
    props: { assignment }
  }));
}

const { assignment } = Astro.props;
---

<Layout title={`${assignment.title} - iGEM - Morax Cheng`} description={assignment.description}>
  <div class="space-y-8">
    <header class="space-y-4">
      <a href="/igem/assignments" class="hover:underline inline-flex items-center gap-2">
        <i class="fas fa-arrow-left"></i>
        Back to Assignments
      </a>
      <div>
        <h1 class="text-3xl font-bold mb-2">{assignment.title}</h1>
        <div class="flex items-center gap-4 text-gray-600 dark:text-gray-400">
          <time datetime={assignment.date}>
            <i class="far fa-calendar-alt mr-1"></i>
            {assignment.date}
          </time>
          <span>
            <i class="far fa-user mr-1"></i>
            {assignment.author}
          </span>
        </div>
      </div>
    </header>

    <div class="space-y-8">
      {assignment.sections.map(section => (
        <div class="border dark:border-gray-800 rounded-lg p-6">
          <h2 class="text-2xl font-bold mb-6 flex items-center gap-2">
            <i class={`fas fa-${section.title.toLowerCase().includes('overview') ? 'book' : 
                       section.title.toLowerCase().includes('deliverables') ? 'tasks' :
                       section.title.toLowerCase().includes('awards') ? 'trophy' :
                       section.title.toLowerCase().includes('notes') ? 'exclamation-circle' : 'info-circle'} 
                       ${section.title.toLowerCase().includes('notes') ? 'text-gray-600 dark:text-gray-400' : 'text-gray-600 dark:text-gray-400'} font-icon`}></i>
            {section.title}
          </h2>

          {section.items && (
            <ul class="space-y-4">
              {section.items.map(item => (
                <li class="flex items-start gap-3">
                  <i class={`fas fa-${item.icon} ${section.title.toLowerCase().includes('notes') ? 'text-gray-600 dark:text-gray-400' : 'text-gray-600 dark:text-gray-400'} mt-1 w-5 font-icon`}></i>
                  <span>{item.text}</span>
                </li>
              ))}
            </ul>
          )}

          {section.subsections && (
            <div class="space-y-8">
              {Object.entries(section.subsections).map(([key, subsection]) => (
                <div class="space-y-4">
                  <h3 class="text-xl font-semibold flex items-center gap-2">
                    <i class={`fas fa-${key === 'medals' ? 'medal' : 'trophy'} ${key === 'medals' ? 'text-gray-600 dark:text-gray-400' : 'text-gray-600 dark:text-gray-400'} font-icon`}></i>
                    {subsection.title}
                  </h3>
                  {'description' in subsection && subsection.description && (
                    <p class="text-gray-600 dark:text-gray-300">{subsection.description}</p>
                  )}
                  {'items' in subsection && subsection.items && (
                    <ul class="space-y-3">
                      {subsection.items.map(item => (
                      <li class="flex items-start gap-3">
                        {key === 'medals' ? (
                          <>
                            <i class={`fas fa-medal text-gray-600 dark:text-gray-400 mt-1 font-icon`}></i>
                            <div>
                              <strong>{item.level}:</strong>
                              <span class="text-gray-600 dark:text-gray-300 ml-1">{item.criteria}</span>
                            </div>
                          </>
                        ) : (
                          <>
                            <i class={`fas fa-${item.icon} text-gray-600 dark:text-gray-400 w-5 font-icon`}></i>
                            <span>{item.name}</span>
                          </>
                        )}
                      </li>
                    ))}
                    </ul>
                  )}
                </div>
              ))}
            </div>
          )}
        </div>
      ))}
    </div>
  </div>
</Layout>

<script>
  // Add Font Awesome if not already added
  if (!document.querySelector('link[href*="font-awesome"]')) {
    const link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css';
    document.head.appendChild(link);
  }
</script>