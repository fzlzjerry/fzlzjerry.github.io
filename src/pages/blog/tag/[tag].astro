---
import Layout from '../../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  const tags = [...new Set(posts.flatMap(post => post.data.tags))];
  
  return tags.map(tag => ({
    params: { tag: tag?.toLowerCase() },
    props: { 
      tag,
      posts: posts.filter(post => post.data.tags?.includes(tag))
    },
  }));
}

const { tag, posts } = Astro.props;
const sortedPosts = posts.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
---

<Layout title={`#${tag} - Blog Tag - Morax Cheng`}>
  <div class="space-y-8">
    <div class="space-y-2">
      <a href="/blog" class="text-blue-600 dark:text-blue-400 hover:underline">&larr; Back to Blog</a>
      <h1 class="text-3xl font-bold">Tag: #{tag}</h1>
    </div>

    <div class="grid gap-8">
      {sortedPosts.map(post => (
        <article class="border dark:border-gray-800 rounded-lg p-6">
          <h2 class="text-xl font-bold mb-2">
            <a href={`/blog/${post.slug}`} class="hover:text-blue-600 dark:hover:text-blue-400">
              {post.data.title}
            </a>
          </h2>
          <div class="flex gap-4 text-sm text-gray-600 dark:text-gray-400 mb-4">
            <time datetime={post.data.date}>
              {new Date(post.data.date).toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </time>
            {post.data.category && (
              <a 
                href={`/blog/category/${post.data.category.toLowerCase()}`}
                class="hover:text-blue-600 dark:hover:text-blue-400"
              >
                {post.data.category}
              </a>
            )}
          </div>
          {post.data.tags && (
            <div class="flex flex-wrap gap-2 mb-4">
              {post.data.tags.map(tag => (
                <a
                  href={`/blog/tag/${tag.toLowerCase()}`}
                  class="px-2 py-1 text-xs bg-blue-100 dark:bg-blue-900 rounded-full hover:bg-blue-200 dark:hover:bg-blue-800 transition"
                >
                  #{tag}
                </a>
              ))}
            </div>
          )}
          {post.data.excerpt && (
            <p class="text-gray-600 dark:text-gray-300">
              {post.data.excerpt}
            </p>
          )}
        </article>
      ))}
    </div>
  </div>
</Layout>